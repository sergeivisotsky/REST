<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <mvc:annotation-driven/>
    <cache:annotation-driven/>
    <context:component-scan base-package="org.sergei.rest"/>
    <jpa:repositories base-package="org.sergei.rest.repository"/>
    <context:property-placeholder location="classpath:/application.properties"/>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${spring.datasource.driverClassName}"/>
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="org.sergei.rest.model"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${spring.jpa.hibernate.ddl-auto}</prop>
                <prop key="hibernate.show_sql">${spring.jpa.hibernate.show-sql}</prop>
                <prop key="hibernate.dialect">${spring.jpa.hibernate.dialect}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="EntityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!--Enabling cache manager-->
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="addresses"/>
            </set>
        </property>
    </bean>

    <!--Models-->
    <bean name="Customer" class="org.sergei.rest.model.Customer"/>
    <bean name="Product" class="org.sergei.rest.model.Product"/>
    <bean name="Order" class="org.sergei.rest.model.Order"/>
    <bean name="OrderDetails" class="org.sergei.rest.model.OrderDetails"/>

    <!--File download from FTP-->
    <bean name="FtpClient" id="ftpClient" class="org.apache.commons.net.ftp.FTPClient"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10000000"/>
    </bean>

    <!--ModelMapper bean from DTO and to DTO serialization-->
    <bean name="ModelMapper" class="org.modelmapper.ModelMapper"/>
    <bean name="ObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

    <!--Swagger API documentation configuration-->
    <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

    <!--CORS dependency so that service be available to the client application-->
    <mvc:cors>
        <mvc:mapping path="/**"
                     allowed-origins="*"
                     allowed-methods="GET, POST, PUT, DELETE"
                     allowed-headers="accept, content-type, authorization, origin"
                     max-age="3600"/>
    </mvc:cors>

    <!--Spring Security oAuth2 authentication configuration import-->
    <import resource="REST_API-servlet-security.xml"/>
</beans>